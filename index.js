// Generated by CoffeeScript 1.10.0
(function() {
  var FractalController, canvas, clearCanvas, context, drawBranch;

  drawBranch = function(context, branchWidth, branchLength, branchOriginX, branchOriginY, branchAngle) {
    var branchEndX, branchEndY, childBranchLength, childBranchWidth;
    context.beginPath();
    context.moveTo(branchOriginX, branchOriginY);
    branchEndX = branchOriginX + Math.cos(branchAngle) * branchLength;
    branchEndY = branchOriginY + Math.sin(branchAngle) * branchLength;
    context.lineWidth = branchWidth;
    context.lineTo(branchEndX, branchEndY);
    context.stroke();
    if (branchWidth >= 0.5) {
      childBranchWidth = branchWidth * 0.75;
      childBranchLength = branchLength * 0.75;
      drawBranch(context, childBranchWidth, childBranchLength, branchEndX, branchEndY, branchAngle + Math.PI / 6);
      return drawBranch(context, childBranchWidth, childBranchLength, branchEndX, branchEndY, branchAngle - Math.PI / 6);
    }
  };

  canvas = document.getElementById('canvas');

  canvas.width = 600;

  canvas.height = 400;

  context = canvas.getContext('2d');

  FractalController = function($scope) {
    $scope.fractalOptions = {};
    $scope.fractalOptions.trunkWidth = 10;
    $scope.fractalOptions.trunkLength = 90;
    $scope.drawImage = function() {
      clearCanvas(canvas, context);
      drawBranch(context, $scope.fractalOptions.trunkWidth, $scope.fractalOptions.trunkLength, canvas.width / 2, canvas.height, -Math.PI / 2);
      return console.log("Drawing finished");
    };
    return $scope.drawImage();
  };

  clearCanvas = function(canvas, context) {
    return context.clearRect(0, 0, canvas.width, canvas.height);
  };

  angular.module('Application', ['ngMaterial']).controller('FractalController', FractalController);

}).call(this);
